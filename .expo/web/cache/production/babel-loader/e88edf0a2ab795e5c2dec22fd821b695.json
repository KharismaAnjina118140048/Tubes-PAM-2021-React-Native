{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";var MapperRegistry=function(){function MapperRegistry(module){_classCallCheck(this,MapperRegistry);this.sortedMappers=[];this.mappers=new Map();this.updatedSinceLastExecute=false;this._module=module;}_createClass(MapperRegistry,[{key:\"startMapper\",value:function startMapper(mapper){this.mappers.set(mapper.id,mapper);this.updatedSinceLastExecute=true;return mapper.id;}},{key:\"stopMapper\",value:function stopMapper(id){this.mappers.delete(id);this.updatedSinceLastExecute=true;}},{key:\"execute\",value:function execute(){if(this.updatedSinceLastExecute){this.updateOrder();this.updatedSinceLastExecute=false;}for(var i=0,len=this.sortedMappers.length;i<len;++i){var mapper=this.sortedMappers[i];if(mapper.dirty){mapper.execute();}}}},{key:\"updateOrder\",value:function updateOrder(){var nodes=_toConsumableArray(this.mappers.values()).map(function(mapper){return new Node(mapper);});var mappersById={};this.mappers.forEach(function(mapper){mappersById[mapper.id]=mapper;});for(var i=0,nodesLen=nodes.length;i<nodesLen;++i){var node=nodes[i];if(node.mapper.outputs.length===0){continue;}for(var j=0;j<nodesLen;++j){var restNode=nodes[j];if(i===j||restNode.mapper.inputs.length===0){continue;}for(var outi=0,outputsLen=node.mapper.outputs.length;outi<outputsLen;++outi){for(var resti=0,restLen=restNode.mapper.inputs.length;resti<restLen;++resti){if(node.mapper.outputs[outi]._id===restNode.mapper.inputs[resti]._id){node.children.push(restNode);}}}}}var post={};var postCounter=1;var dfs=function dfs(node){var index=nodes.indexOf(node);if(index===-1){return;}++postCounter;nodes.splice(index,1);if(node.children.length===0&&nodes.length>0){post[node.mapper.id]=postCounter++;dfs(nodes[0]);return;}for(var _i=0,len=node.children.length;_i<len;++_i){dfs(node.children[_i]);}post[node.mapper.id]=postCounter++;};while(nodes.length){dfs(nodes[0]);}var postArray=Object.keys(post).map(function(key){return[key,post[key]];});postArray.sort(function(a,b){return b[1]-a[1];});this.sortedMappers=[];for(var _i2=0,len=postArray.length;_i2<len;++_i2){var _postArray$_i=_slicedToArray(postArray[_i2],1),id=_postArray$_i[0];this.sortedMappers.push(mappersById[id]);}}},{key:\"needRunOnRender\",get:function get(){return this.updatedSinceLastExecute;}}]);return MapperRegistry;}();export{MapperRegistry as default};var Node=function Node(mapper){var parents=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];var children=arguments.length>2&&arguments[2]!==undefined?arguments[2]:[];_classCallCheck(this,Node);this.mapper=null;this.children=[];this.mapper=mapper;this.children=children;};","map":{"version":3,"sources":["C:/Users/PC NOOB/Downloads/pokepoke/node_modules/react-native-reanimated/src/reanimated2/js-reanimated/MapperRegistry.js"],"names":["MapperRegistry","module","sortedMappers","mappers","Map","updatedSinceLastExecute","_module","mapper","set","id","delete","updateOrder","i","len","length","dirty","execute","nodes","values","map","Node","mappersById","forEach","nodesLen","node","outputs","j","restNode","inputs","outi","outputsLen","resti","restLen","_id","children","push","post","postCounter","dfs","index","indexOf","splice","postArray","Object","keys","key","sort","a","b","parents"],"mappings":"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","sourcesContent":["export default class MapperRegistry {\n  sortedMappers = [];\n  mappers = new Map();\n\n  updatedSinceLastExecute = false;\n\n  constructor(module) {\n    this._module = module;\n  }\n\n  startMapper(mapper) {\n    this.mappers.set(mapper.id, mapper);\n    this.updatedSinceLastExecute = true;\n    return mapper.id;\n  }\n\n  stopMapper(id) {\n    this.mappers.delete(id);\n    this.updatedSinceLastExecute = true;\n  }\n\n  execute() {\n    if (this.updatedSinceLastExecute) {\n      this.updateOrder();\n      this.updatedSinceLastExecute = false;\n    }\n\n    for (let i = 0, len = this.sortedMappers.length; i < len; ++i) {\n      const mapper = this.sortedMappers[i];\n      if (mapper.dirty) {\n        mapper.execute();\n      }\n    }\n  }\n\n  updateOrder() {\n    const nodes = [...this.mappers.values()].map((mapper) => new Node(mapper));\n\n    const mappersById = {};\n    this.mappers.forEach((mapper) => {\n      mappersById[mapper.id] = mapper;\n    });\n\n    // create a graph from array of nodes\n    for (let i = 0, nodesLen = nodes.length; i < nodesLen; ++i) {\n      const node = nodes[i];\n      if (node.mapper.outputs.length === 0) {\n        continue;\n      }\n      for (let j = 0; j < nodesLen; ++j) {\n        const restNode = nodes[j];\n        if (i === j || restNode.mapper.inputs.length === 0) {\n          continue;\n        }\n        for (\n          let outi = 0, outputsLen = node.mapper.outputs.length;\n          outi < outputsLen;\n          ++outi\n        ) {\n          for (\n            let resti = 0, restLen = restNode.mapper.inputs.length;\n            resti < restLen;\n            ++resti\n          ) {\n            if (\n              node.mapper.outputs[outi]._id ===\n              restNode.mapper.inputs[resti]._id\n            ) {\n              node.children.push(restNode);\n            }\n          }\n        }\n      }\n    }\n\n    const post = {};\n    let postCounter = 1;\n    const dfs = (node) => {\n      const index = nodes.indexOf(node);\n      if (index === -1) {\n        // this node has already been handled\n        return;\n      }\n      ++postCounter;\n      nodes.splice(index, 1);\n      if (node.children.length === 0 && nodes.length > 0) {\n        post[node.mapper.id] = postCounter++;\n        dfs(nodes[0]);\n        return;\n      }\n      for (let i = 0, len = node.children.length; i < len; ++i) {\n        dfs(node.children[i]);\n      }\n      post[node.mapper.id] = postCounter++;\n    };\n\n    while (nodes.length) dfs(nodes[0]);\n\n    const postArray = Object.keys(post).map((key) => {\n      return [key, post[key]];\n    });\n    postArray.sort((a, b) => {\n      return b[1] - a[1];\n    });\n\n    // clear sorted mappers\n    this.sortedMappers = [];\n\n    for (let i = 0, len = postArray.length; i < len; ++i) {\n      const [id] = postArray[i];\n      this.sortedMappers.push(mappersById[id]);\n    }\n  }\n\n  get needRunOnRender() {\n    return this.updatedSinceLastExecute;\n  }\n}\n\nclass Node {\n  mapper = null;\n  children = [];\n\n  constructor(mapper, parents = [], children = []) {\n    this.mapper = mapper;\n    this.children = children;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}