{"ast":null,"code":"export var Bezier=function(){var _f=function _f(mX1,mY1,mX2,mY2){var NEWTON_ITERATIONS=4;var NEWTON_MIN_SLOPE=0.001;var SUBDIVISION_PRECISION=0.0000001;var SUBDIVISION_MAX_ITERATIONS=10;var kSplineTableSize=11;var kSampleStepSize=1.0/(kSplineTableSize-1.0);var A=function(){var _f=function _f(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;};_f._closure={};_f.asString=\"function A(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}\";_f.__workletHash=7696928702327;global.__reanimatedWorkletInit(_f);return _f;}();var B=function(){var _f=function _f(aA1,aA2){return 3.0*aA2-6.0*aA1;};_f._closure={};_f.asString=\"function B(aA1,aA2){return 3.0*aA2-6.0*aA1;}\";_f.__workletHash=3169786778773;global.__reanimatedWorkletInit(_f);return _f;}();var C=function(){var _f=function _f(aA1){return 3.0*aA1;};_f._closure={};_f.asString=\"function C(aA1){return 3.0*aA1;}\";_f.__workletHash=6399610653367;global.__reanimatedWorkletInit(_f);return _f;}();var calcBezier=function(){var _f=function _f(aT,aA1,aA2){return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;};_f._closure={A:A,B:B,C:C};_f.asString=\"function calcBezier(aT,aA1,aA2){const{A,B,C}=jsThis._closure;{return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}}\";_f.__workletHash=3153137150968;global.__reanimatedWorkletInit(_f);return _f;}();var getSlope=function(){var _f=function _f(aT,aA1,aA2){return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);};_f._closure={A:A,B:B,C:C};_f.asString=\"function getSlope(aT,aA1,aA2){const{A,B,C}=jsThis._closure;{return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}}\";_f.__workletHash=17050227570308;global.__reanimatedWorkletInit(_f);return _f;}();var binarySubdivide=function(){var _f=function _f(aX,aA,aB,mX1,mX2){var currentX;var currentT;var i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;};_f._closure={SUBDIVISION_PRECISION:SUBDIVISION_PRECISION,SUBDIVISION_MAX_ITERATIONS:SUBDIVISION_MAX_ITERATIONS,calcBezier:calcBezier};_f.asString=\"function binarySubdivide(aX,aA,aB,mX1,mX2){const{SUBDIVISION_PRECISION,SUBDIVISION_MAX_ITERATIONS,calcBezier}=jsThis._closure;{var currentX;var currentT;var i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}}\";_f.__workletHash=8216390185547;global.__reanimatedWorkletInit(_f);return _f;}();var newtonRaphsonIterate=function(){var _f=function _f(aX,aGuessT,mX1,mX2){for(var i=0;i<NEWTON_ITERATIONS;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}var currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;};_f._closure={NEWTON_ITERATIONS:NEWTON_ITERATIONS,getSlope:getSlope,calcBezier:calcBezier};_f.asString=\"function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){const{NEWTON_ITERATIONS,getSlope,calcBezier}=jsThis._closure;{for(var i=0;i<NEWTON_ITERATIONS;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}var currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}}\";_f.__workletHash=5901993849860;global.__reanimatedWorkletInit(_f);return _f;}();var LinearEasing=function(){var _f=function _f(x){return x;};_f._closure={};_f.asString=\"function LinearEasing(x){return x;}\";_f.__workletHash=3962143445177;global.__reanimatedWorkletInit(_f);return _f;}();if(!(mX1>=0&&mX1<=1&&mX2>=0&&mX2<=1)){throw new Error('bezier x values must be in [0, 1] range');}if(mX1===mY1&&mX2===mY2){return LinearEasing;}var sampleValues=new Array(kSplineTableSize);for(var i=0;i<kSplineTableSize;++i){sampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}var getTForX=function(){var _f=function _f(aX){var intervalStart=0.0;var currentSample=1;var lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;var dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);var guessForT=intervalStart+dist*kSampleStepSize;var initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}};_f._closure={kSplineTableSize:kSplineTableSize,sampleValues:sampleValues,kSampleStepSize:kSampleStepSize,getSlope:getSlope,mX1:mX1,mX2:mX2,NEWTON_MIN_SLOPE:NEWTON_MIN_SLOPE,newtonRaphsonIterate:newtonRaphsonIterate,binarySubdivide:binarySubdivide};_f.asString=\"function getTForX(aX){const{kSplineTableSize,sampleValues,kSampleStepSize,getSlope,mX1,mX2,NEWTON_MIN_SLOPE,newtonRaphsonIterate,binarySubdivide}=jsThis._closure;{var intervalStart=0.0;var currentSample=1;var lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;var dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);var guessForT=intervalStart+dist*kSampleStepSize;var initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}}\";_f.__workletHash=10148290284160;global.__reanimatedWorkletInit(_f);return _f;}();return function(){var _f=function _f(x){if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);};_f._closure={mX1:mX1,mY1:mY1,mX2:mX2,mY2:mY2,calcBezier:calcBezier,getTForX:getTForX};_f.asString=\"function BezierEasing(x){const{mX1,mY1,mX2,mY2,calcBezier,getTForX}=jsThis._closure;{if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);}}\";_f.__workletHash=8676971518933;global.__reanimatedWorkletInit(_f);return _f;}();};_f._closure={};_f.asString=\"function Bezier(mX1,mY1,mX2,mY2){var NEWTON_ITERATIONS=4;var NEWTON_MIN_SLOPE=0.001;var SUBDIVISION_PRECISION=0.0000001;var SUBDIVISION_MAX_ITERATIONS=10;var kSplineTableSize=11;var kSampleStepSize=1.0/(kSplineTableSize-1.0);var A=function(){var _f=function _f(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;};_f._closure={};_f.asString=\\\"function A(aA1,aA2){return 1.0-3.0*aA2+3.0*aA1;}\\\";_f.__workletHash=7696928702327;global.__reanimatedWorkletInit(_f);return _f;}();var B=function(){var _f=function _f(aA1,aA2){return 3.0*aA2-6.0*aA1;};_f._closure={};_f.asString=\\\"function B(aA1,aA2){return 3.0*aA2-6.0*aA1;}\\\";_f.__workletHash=3169786778773;global.__reanimatedWorkletInit(_f);return _f;}();var C=function(){var _f=function _f(aA1){return 3.0*aA1;};_f._closure={};_f.asString=\\\"function C(aA1){return 3.0*aA1;}\\\";_f.__workletHash=6399610653367;global.__reanimatedWorkletInit(_f);return _f;}();var calcBezier=function(){var _f=function _f(aT,aA1,aA2){return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;};_f._closure={A:A,B:B,C:C};_f.asString=\\\"function calcBezier(aT,aA1,aA2){const{A,B,C}=jsThis._closure;{return((A(aA1,aA2)*aT+B(aA1,aA2))*aT+C(aA1))*aT;}}\\\";_f.__workletHash=3153137150968;global.__reanimatedWorkletInit(_f);return _f;}();var getSlope=function(){var _f=function _f(aT,aA1,aA2){return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);};_f._closure={A:A,B:B,C:C};_f.asString=\\\"function getSlope(aT,aA1,aA2){const{A,B,C}=jsThis._closure;{return 3.0*A(aA1,aA2)*aT*aT+2.0*B(aA1,aA2)*aT+C(aA1);}}\\\";_f.__workletHash=17050227570308;global.__reanimatedWorkletInit(_f);return _f;}();var binarySubdivide=function(){var _f=function _f(aX,aA,aB,mX1,mX2){var currentX;var currentT;var i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;};_f._closure={SUBDIVISION_PRECISION:SUBDIVISION_PRECISION,SUBDIVISION_MAX_ITERATIONS:SUBDIVISION_MAX_ITERATIONS,calcBezier:calcBezier};_f.asString=\\\"function binarySubdivide(aX,aA,aB,mX1,mX2){const{SUBDIVISION_PRECISION,SUBDIVISION_MAX_ITERATIONS,calcBezier}=jsThis._closure;{var currentX;var currentT;var i=0;do{currentT=aA+(aB-aA)/2.0;currentX=calcBezier(currentT,mX1,mX2)-aX;if(currentX>0.0){aB=currentT;}else{aA=currentT;}}while(Math.abs(currentX)>SUBDIVISION_PRECISION&&++i<SUBDIVISION_MAX_ITERATIONS);return currentT;}}\\\";_f.__workletHash=8216390185547;global.__reanimatedWorkletInit(_f);return _f;}();var newtonRaphsonIterate=function(){var _f=function _f(aX,aGuessT,mX1,mX2){for(var i=0;i<NEWTON_ITERATIONS;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}var currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;};_f._closure={NEWTON_ITERATIONS:NEWTON_ITERATIONS,getSlope:getSlope,calcBezier:calcBezier};_f.asString=\\\"function newtonRaphsonIterate(aX,aGuessT,mX1,mX2){const{NEWTON_ITERATIONS,getSlope,calcBezier}=jsThis._closure;{for(var i=0;i<NEWTON_ITERATIONS;++i){var currentSlope=getSlope(aGuessT,mX1,mX2);if(currentSlope===0.0){return aGuessT;}var currentX=calcBezier(aGuessT,mX1,mX2)-aX;aGuessT-=currentX/currentSlope;}return aGuessT;}}\\\";_f.__workletHash=5901993849860;global.__reanimatedWorkletInit(_f);return _f;}();var LinearEasing=function(){var _f=function _f(x){return x;};_f._closure={};_f.asString=\\\"function LinearEasing(x){return x;}\\\";_f.__workletHash=3962143445177;global.__reanimatedWorkletInit(_f);return _f;}();if(!(mX1>=0&&mX1<=1&&mX2>=0&&mX2<=1)){throw new Error('bezier x values must be in [0, 1] range');}if(mX1===mY1&&mX2===mY2){return LinearEasing;}var sampleValues=new Array(kSplineTableSize);for(var i=0;i<kSplineTableSize;++i){sampleValues[i]=calcBezier(i*kSampleStepSize,mX1,mX2);}var getTForX=function(){var _f=function _f(aX){var intervalStart=0.0;var currentSample=1;var lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;var dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);var guessForT=intervalStart+dist*kSampleStepSize;var initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}};_f._closure={kSplineTableSize:kSplineTableSize,sampleValues:sampleValues,kSampleStepSize:kSampleStepSize,getSlope:getSlope,mX1:mX1,mX2:mX2,NEWTON_MIN_SLOPE:NEWTON_MIN_SLOPE,newtonRaphsonIterate:newtonRaphsonIterate,binarySubdivide:binarySubdivide};_f.asString=\\\"function getTForX(aX){const{kSplineTableSize,sampleValues,kSampleStepSize,getSlope,mX1,mX2,NEWTON_MIN_SLOPE,newtonRaphsonIterate,binarySubdivide}=jsThis._closure;{var intervalStart=0.0;var currentSample=1;var lastSample=kSplineTableSize-1;for(;currentSample!==lastSample&&sampleValues[currentSample]<=aX;++currentSample){intervalStart+=kSampleStepSize;}--currentSample;var dist=(aX-sampleValues[currentSample])/(sampleValues[currentSample+1]-sampleValues[currentSample]);var guessForT=intervalStart+dist*kSampleStepSize;var initialSlope=getSlope(guessForT,mX1,mX2);if(initialSlope>=NEWTON_MIN_SLOPE){return newtonRaphsonIterate(aX,guessForT,mX1,mX2);}else if(initialSlope===0.0){return guessForT;}else{return binarySubdivide(aX,intervalStart,intervalStart+kSampleStepSize,mX1,mX2);}}}\\\";_f.__workletHash=10148290284160;global.__reanimatedWorkletInit(_f);return _f;}();return function(){var _f=function _f(x){if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);};_f._closure={mX1:mX1,mY1:mY1,mX2:mX2,mY2:mY2,calcBezier:calcBezier,getTForX:getTForX};_f.asString=\\\"function BezierEasing(x){const{mX1,mY1,mX2,mY2,calcBezier,getTForX}=jsThis._closure;{if(mX1===mY1&&mX2===mY2){return x;}if(x===0){return 0;}if(x===1){return 1;}return calcBezier(getTForX(x),mY1,mY2);}}\\\";_f.__workletHash=8676971518933;global.__reanimatedWorkletInit(_f);return _f;}();}\";_f.__workletHash=2675529951738;global.__reanimatedWorkletInit(_f);return _f;}();","map":{"version":3,"sources":["C:/Users/PC NOOB/Downloads/pokepoke/node_modules/react-native-reanimated/src/reanimated2/Bezier.js"],"names":["Bezier","mX1","mY1","mX2","mY2","NEWTON_ITERATIONS","NEWTON_MIN_SLOPE","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","A","aA1","aA2","B","C","calcBezier","aT","getSlope","binarySubdivide","aX","aA","aB","currentX","currentT","i","Math","abs","newtonRaphsonIterate","aGuessT","currentSlope","LinearEasing","x","Error","sampleValues","Array","getTForX","intervalStart","currentSample","lastSample","dist","guessForT","initialSlope"],"mappings":"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","sourcesContent":["/**\n * https://github.com/gre/bezier-easing\n * BezierEasing - use bezier curve for transition easing function\n * by Gaëtan Renaudeau 2014 - 2015 – MIT License\n */\n\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\n\nexport function Bezier(mX1, mY1, mX2, mY2) {\n  'worklet';\n\n  var NEWTON_ITERATIONS = 4;\n  var NEWTON_MIN_SLOPE = 0.001;\n  var SUBDIVISION_PRECISION = 0.0000001;\n  var SUBDIVISION_MAX_ITERATIONS = 10;\n\n  var kSplineTableSize = 11;\n  var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\n\n  function A(aA1, aA2) {\n    'worklet';\n    return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n  }\n  function B(aA1, aA2) {\n    'worklet';\n    return 3.0 * aA2 - 6.0 * aA1;\n  }\n  function C(aA1) {\n    'worklet';\n    return 3.0 * aA1;\n  }\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  function calcBezier(aT, aA1, aA2) {\n    'worklet';\n    return ((A(aA1, aA2) * aT + B(aA1, aA2)) * aT + C(aA1)) * aT;\n  }\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  function getSlope(aT, aA1, aA2) {\n    'worklet';\n    return 3.0 * A(aA1, aA2) * aT * aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\n  }\n\n  function binarySubdivide(aX, aA, aB, mX1, mX2) {\n    'worklet';\n    var currentX;\n    var currentT;\n    var i = 0;\n    do {\n      currentT = aA + (aB - aA) / 2.0;\n      currentX = calcBezier(currentT, mX1, mX2) - aX;\n      if (currentX > 0.0) {\n        aB = currentT;\n      } else {\n        aA = currentT;\n      }\n    } while (\n      Math.abs(currentX) > SUBDIVISION_PRECISION &&\n      ++i < SUBDIVISION_MAX_ITERATIONS\n    );\n    return currentT;\n  }\n\n  function newtonRaphsonIterate(aX, aGuessT, mX1, mX2) {\n    'worklet';\n    for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\n      var currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n      var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  }\n\n  function LinearEasing(x) {\n    'worklet';\n    return x;\n  }\n\n  if (!(mX1 >= 0 && mX1 <= 1 && mX2 >= 0 && mX2 <= 1)) {\n    throw new Error('bezier x values must be in [0, 1] range');\n  }\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return LinearEasing;\n  }\n\n  // FIXME: Float32Array is not available in Hermes right now\n  //\n  // var float32ArraySupported = typeof Float32Array === 'function';\n  // const sampleValues = float32ArraySupported\n  // ? new Float32Array(kSplineTableSize)\n  // : new Array(kSplineTableSize);\n\n  // Precompute samples table\n  const sampleValues = new Array(kSplineTableSize);\n\n  for (var i = 0; i < kSplineTableSize; ++i) {\n    sampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\n  }\n\n  function getTForX(aX) {\n    'worklet';\n    var intervalStart = 0.0;\n    var currentSample = 1;\n    var lastSample = kSplineTableSize - 1;\n\n    for (\n      ;\n      currentSample !== lastSample && sampleValues[currentSample] <= aX;\n      ++currentSample\n    ) {\n      intervalStart += kSampleStepSize;\n    }\n    --currentSample;\n\n    // Interpolate to provide an initial guess for t\n    var dist =\n      (aX - sampleValues[currentSample]) /\n      (sampleValues[currentSample + 1] - sampleValues[currentSample]);\n    var guessForT = intervalStart + dist * kSampleStepSize;\n\n    var initialSlope = getSlope(guessForT, mX1, mX2);\n    if (initialSlope >= NEWTON_MIN_SLOPE) {\n      return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\n    } else if (initialSlope === 0.0) {\n      return guessForT;\n    } else {\n      return binarySubdivide(\n        aX,\n        intervalStart,\n        intervalStart + kSampleStepSize,\n        mX1,\n        mX2\n      );\n    }\n  }\n\n  return function BezierEasing(x) {\n    'worklet';\n    if (mX1 === mY1 && mX2 === mY2) {\n      return x; // linear\n    }\n    // Because JavaScript number are imprecise, we should guarantee the extremes are right.\n    if (x === 0) {\n      return 0;\n    }\n    if (x === 1) {\n      return 1;\n    }\n    return calcBezier(getTForX(x), mY1, mY2);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}